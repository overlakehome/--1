##### ?

* .

Solr applies an analysis process to fields being indexed to stem words, remove stopwords, and otherwise alter the tokens to be indexed. The Lucene Analyzer class controls this process, and consists of an optional **CharFilter**, a required **Tokenizer**, and zero or more **TokenFilter**s.  
* A `CharFilter` can be used to remove content while maintaining correct offset information (such as stripping HTML tags) for things like highlighting. Note that in most cases, you wonâ€™t need a `CharFilter`.
* A `Tokenizer` produces Tokens, which in most cases correspond to words to be indexed.
* The `TokenFilter` then takes Tokens from the `Tokenizer` and optionally modifies or removes the Tokens before giving them back to Lucene for indexing.
* For instance, Solr's `WhitespaceTokenizer` breaks words on whitespace, and its `StopFilter` removes common words from search results.

##### Analyzers

* [org.apache.lucene.analysis.core.WhitespaceAnalyzer](http://svn.apache.org/viewvc/lucene/dev/trunk/lucene/analysis/common/src/java/org/apache/lucene/analysis/core/WhitespaceAnalyzer.java?view=markup)
* [org.apache.lucene.analysis.en.EnglishAnalyzer](http://svn.apache.org/viewvc/lucene/dev/trunk/lucene/analysis/common/src/java/org/apache/lucene/analysis/en/EnglishAnalyzer.java?view=markup)
* [org.apache.lucene.analysis.standard.StandardAnalyzer extends StopwordAnalyzerBase](http://svn.apache.org/viewvc/lucene/dev/trunk/lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/StandardAnalyzer.java?view=markup)
* [org.apache.lucene.analysis.standard.UAX29URLEmailAnalyzer extends StopwordAnalyzerBase](http://svn.apache.org/viewvc/lucene/dev/trunk/lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/UAX29URLEmailAnalyzer.java?view=markup)
* [org.apache.mahout.text.MailArchivesClusteringAnalyzer extends StopwordAnalyzerBase](http://svn.apache.org/viewvc/mahout/trunk/integration/src/main/java/org/apache/mahout/text/MailArchivesClusteringAnalyzer.java?view=markup)
* [org.apache.mahout.text.wikipedia.WikipediaAnalyzer extends StopwordAnalyzerBase](http://svn.apache.org/viewvc/mahout/trunk/integration/src/main/java/org/apache/mahout/text/wikipedia/WikipediaAnalyzer.java?view=markup)
* [org.dspace.search.DSAnalyzer](https://svn.duraspace.org/view/dspace/dspace/trunk/dspace-api/src/main/java/org/dspace/search/DSAnalyzer.java?view=markup)
* [org.yooreeka.algos.search.lucene.analyzer.CustomAnalyzer](http://yooreeka.googlecode.com/svn-history/r87/trunk/src/org/yooreeka/algos/search/lucene/analyzer/CustomAnalyzer.java)
* [org.icatproject.core.manager.IcatAnalyzer](https://code.google.com/p/icatproject/source/browse/icat/trunk/core/src/main/java/org/icatproject/core/manager/IcatAnalyzer.java?r=2511)
* [org.icatproject.core.manager.ESNAnalyzer](https://code.google.com/p/icatproject/source/browse/icat/trunk/core/src/main/java/org/icatproject/core/manager/ESNAnalyzer.java?spec=svn2499&r=2499)

#
* http://svn.apache.org/viewvc/mahout/trunk/core/src/main/java/org/apache/mahout/common/lucene/
  * [AnalyzerUtils#createAnalzyer](http://svn.apache.org/viewvc/mahout/trunk/core/src/main/java/org/apache/mahout/common/lucene/AnalyzerUtils.java?view=markup)
* [org.apache.mahout.utils.regex.AnalyzerTransformer implements RegexTransformer](http://svn.apache.org/viewvc/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/regex/AnalyzerTransformer.java?view=markup)

##### mahout seq2sparse --help

* -s 500 (default 2, also called --minSupport) -- excludes that don't occur 500- times across all documents.
* -x 70 (default 99, also called --maxDFPercent) -- excludes that occur in 70+% documents.
* -ng 1 (default 1, also called --maxNGramSize) -- 2 for bigram, 3 for trigram, etc.
* -a org.apache.mahout.text.MailArchivesClusteringAnalyzer
* -a org.apache.lucene.analysis.WhitespaceAnalyzer

###### (maybe)

* -md 1 (default: 1, also called --minDF)
* -xs -1 (default: -1, also called --maxDFSigma) -- a good value to be 3.0.
* -wt (default: tfidf, also called --weight) -- tf or tfidf.
* -n (default: -1, also called --norm)
* -ml (1.0, also called --minLLR) - minimum log likelihood ratio.
* -lnorm (default: false, also called --logNormalize)
